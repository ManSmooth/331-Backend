name: Deploy to AWS Docker on merge with Prod
"on":
    push:
        branches:
            - prod
jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v2
            - name: setup Java
              uses: actions/setup-java@v3
              with:
                  java-version: "17"
                  distribution: "adopt"
            - name: run MVN
              run: |
                  mvn clean install -DskipTests -B
                  mkdir -p target/dependency && (cd target/dependency; unzip ../*.jar)
            - name: setup QEMU
              uses: docker/setup-qemu-action@v2
            - name: setup Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_TOKEN }}
            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: true
                  tags: ${{ secrets.DOCKER_HUB_USERNAME }}/se331-backend:latest
            - name: copy file via ssh password
              uses: appleboy/scp-action@v0.1.4
              with:
                  host: ${{ secrets.HOST_SERVER }}
                  username: ${{ secrets.HOST_USERNAME }}
                  key: ${{secrets.HOST_SSH_PK }}
                  port: 22
                  source: "docker-compose-prod.yml"
                  target: "~/ubuntu/backend"
            - name: run docker compose
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: ${{ secrets.HOST_SERVER }}
                  username: ${{ secrets.HOST_USERNAME }}
                  key: ${{secrets.HOST_SSH_PK }}
                  port: 22
                  script: |
                      cd ~/ubuntu/backend
                      echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
                      mv docker-compose-prod.yml  docker-compose.yml
                      docker compose down
                      docker compose pull
                      docker compose up -d
                      rm -rf ~/ubuntu/backend
